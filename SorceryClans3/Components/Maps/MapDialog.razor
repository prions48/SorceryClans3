@namespace SorceryClans3.Components.Maps
@using SorceryClans3.Data.Abstractions
<MudDialog>
    <DialogContent>
        <MudStack Row Justify="Justify.SpaceBetween">
            <MudTextField Value="TooltipText1" ReadOnly />
            <MudTextField Value="TooltipText2" ReadOnly />
        </MudStack>
        <MudContainer Style="width: 400px; height: 400px; border-width: 2px; border-style: solid; border-color: black;">
            @foreach (IMap map in Icons)
            {
                @if (IsInFrame(map))
                {
                    <div @onmouseenter="() => SetText(map)">
                        <MapIcon MapData="map" Shape="MapShape.Triangle" MagFactor="MagFactor" XFrame="XFrame" YFrame="YFrame" />
                    </div>
                }
            }
        </MudContainer>
        <MudStack Row Justify="Justify.Center">
            <MudIconButton OnClick="MoveLeft" Icon="@(MudBlazor.Icons.Material.Filled.ArrowCircleLeft)" Color="Color.Info" />
            <MudIconButton OnClick="MoveRight" Icon="@(MudBlazor.Icons.Material.Filled.ArrowCircleRight)" Color="Color.Info" />
            <MudIconButton OnClick="MoveUp" Icon="@(MudBlazor.Icons.Material.Filled.ArrowCircleUp)" Color="Color.Info" />
            <MudIconButton OnClick="MoveDown" Icon="@(MudBlazor.Icons.Material.Filled.ArrowCircleDown)" Color="Color.Info" />
            <MudIconButton OnClick="FactorUp" Icon="@(MudBlazor.Icons.Material.Filled.ExposurePlus1)" Color="Color.Info" />
            <MudIconButton OnClick="FactorDown" Icon="@(MudBlazor.Icons.Material.Filled.ExposureNeg1)" Color="Color.Info" />
        </MudStack>
    </DialogContent>
</MudDialog>

@code{
    //[Parameter, EditorRequired] public GameSettings Settings { get; set; } = default!;//?
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public List<IMap> Icons { get; set; } = [];
    private string? TooltipText1 { get; set; }
    private string? TooltipText2 { get; set; }
    private double MagFactor { get; set; } = 2.0;
    private int XFrame { get; set; } = 0;
    private int YFrame { get; set; } = 0;
    private void Close()
    {
        MudDialog.Close(DialogResult.Cancel());
    }
    private void SetText(IMap map)
    {
        TooltipText1 = map.TooltipText;
        TooltipText2 = $"{map.X.ToString("N2")} {map.Y.ToString("N2")}";
    }
    private bool IsInFrame(IMap map)
    {
        bool ret = map.X * MagFactor > -200 + XFrame;
        ret = ret && map.X * MagFactor < 200 + XFrame;
        ret = ret && map.Y * MagFactor > -200 + YFrame;
        ret = ret && map.Y * MagFactor < 200 + YFrame;
        return ret;
    }
    private void MoveLeft()
    {
        XFrame -= 50;
    }
    private void MoveRight()
    {
        XFrame += 50;
    }
    private void MoveUp()
    {
        YFrame += 50;
    }
    private void MoveDown()
    {
        YFrame -= 50;
    }
    private void FactorUp()
    {
        if (MagFactor < 0.99)
            MagFactor *= 2;
        else
            MagFactor += 1.0;
    }
    private void FactorDown()
    {
        if (MagFactor < 1.001)
            MagFactor /= 2;
        else
            MagFactor -= 1.0;
    }
}