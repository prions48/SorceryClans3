@namespace SorceryClans3.Components.Pages.Dialogs

<MudDialog>
    <DialogContent>
        <MudSimpleTable Striped Bordered Outlined>
            <thead>
                <tr>
                    <th>Team</th>
                    <th>Medic</th>
                    <th>Distance</th>
                    <th>Speed</th>
                    <th>Select</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RescueTeam team in Rescuers)
                {
                    <tr>
                        <td>@team.Team.TeamName</td>
                        <td>@team.Team.KScore</td>
                        <td>
                            @if (team.InterceptPoint == null)
                            {
                                <i>Out of range</i>
                            }
                            else
                            {
                                @team.InterceptPoint.GetDistance(team.Team.BaseLocation).ToString("N1")
                            }
                        </td>
                        <td>@team.Team.DScore</td>
                        <td>
                            <MudIconButton OnClick="() => Submit(team.Team)" Icon="@Icons.Material.Filled.AddCircleOutline" Color="Color.Info" />
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Default">Cancel</MudButton>
    </DialogContent>
</MudDialog>

@code {
    [Parameter, EditorRequired] public Team Rescuee { get; set; }
    [Parameter] public List<Team> AvailableTeams { get; set; } = [];
    [Parameter] public MapLocation Location { get; set; } = new();
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    private List<RescueTeam> Rescuers { get; set; } = [];
    protected override void OnInitialized()
    {
        Rescuers = AvailableTeams.Select(e => new RescueTeam() { Team = e, InterceptPoint = Location.InterceptionPoint(Rescuee, e)}).ToList();
    }
    void Submit(Team team)
    {
        MudDialog.Close(DialogResult.Ok(team));
    }
    void Cancel() => MudDialog.Close(DialogResult.Cancel());
    public class RescueTeam
    {
        public Team Team { get; set; }
        public MapLocation? InterceptPoint { get; set; }
    }
}