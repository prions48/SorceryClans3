@namespace SorceryClans3.Components.Pages.Dialogs
@inject IDialogService dialogService
<MudDialog>
    <DialogContent>
        <MudSimpleTable Striped Bordered Outlined>
            <thead>
                <tr>
                    <th>Team</th>
                    @if (CScore || AllScores)
                    {
                        <th>Combat</th>
                    }
                    @if (MScore || AllScores || ResearchScores)
                    {
                        <th>Magic</th>
                    }
                    @if (SScore || AllScores)
                    {
                        <th>Subtlety</th>
                    }
                    @if (KScore || AllScores)
                    {
                        <th>Healing</th>
                    }
                    @if (Teach)
                    {
                        <th>Teach</th>
                    }
                    @if (ResearchScores)
                    {
                        <th>Spell</th>
                        <th>Research</th>
                    }
                    <th>Color</th>
                    @if (Mission != null)
                    {
                        <th>Boosts</th>
                    }
                    <th>Select</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Team team in AvailableTeams)
                {
                    <tr>
                        <td>@team.TeamName</td>
                        @if (CScore || AllScores)
                        {
                            <td>@(team.CScore + (Mission == null ? 0 : ActiveWeathers.Where(e => e.AssignedSoldier?.Team?.ID == team.ID).Sum(e => e.ComEffect(Mission.Location ?? MapLocation.HomeBase, true))))</td>
                        }
                        @if (MScore || AllScores || ResearchScores)
                        {
                            <td>@team.MScore</td>
                        }
                        @if (SScore || AllScores)
                        {
                            <td>@(team.SScore + (Mission == null ? 0 : ActiveWeathers.Where(e => e.AssignedSoldier?.Team?.ID == team.ID).Sum(e => e.SubEffect(Mission.Location ?? MapLocation.HomeBase))))</td>
                        }
                        @if (KScore || AllScores)
                        {
                            <td>@team.KScore</td>
                        }
                        @if (Teach)
                        {
                            <td>@team.TeachDisplay</td>
                        }
                        @if (ResearchScores)
                        {
                            <td>@team.MSpellScore</td>
                            <td>@team.ResearchDisplay</td>
                        }
                        <td>
                            <MagicIcons Colors="@(team.GetColors)" />
                        </td>
                        @if (Mission != null)
                        {
                            <td>
                                <MudStack>
                                    @foreach (Soldier s in team.GetAllSoldiers)
                                    {
                                        @if (s.Artifact is SpiritWeather weather)
                                        {
                                            <MudButton Variant="Variant.Outlined" Color="@(ActiveWeathers.Contains(weather) ? Color.Warning : Color.Info)"
                                             Disabled="!weather.InRange(Mission.Location ?? MapLocation.HomeBase)" OnClick="() => ToggleWeather(weather)">@weather.WeatherName</MudButton>
                                        }
                                    }
                                </MudStack>
                            </td>
                        }
                        <td>
                            <MudIconButton OnClick="() => Submit(team)" Icon="@Icons.Material.Filled.AddCircleOutline" Color="Color.Info" />
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Default">Cancel</MudButton>
    </DialogContent>
</MudDialog>

@code {
    [Parameter] public List<Team> AvailableTeams { get; set; } = [];
    [Parameter] public bool AllScores { get; set; } = false;
    [Parameter] public bool CScore { get; set; } = false;
    [Parameter] public bool MScore { get; set; } = false;
    [Parameter] public bool SScore { get; set; } = false;
    [Parameter] public bool Teach { get; set; } = false;
    [Parameter] public bool KScore { get; set; } = false;
    [Parameter] public bool ResearchScores { get; set; } = false;
    [Parameter] public Mission? Mission { get; set; }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    private List<SpiritWeather> ActiveWeathers { get; set; } = [];
    private void ToggleWeather(SpiritWeather weather)
    {
        if (ActiveWeathers.Contains(weather))
        {
            ActiveWeathers.Remove(weather);
        }
        else
        {
            ActiveWeathers.Add(weather);
        }
    }
    void Submit(Team team)
    {
        if (Mission != null)
            Mission.StatMods.AddRange(ActiveWeathers.Where(e => e.AssignedSoldier?.Team?.ID == team.ID));
        MudDialog.Close(DialogResult.Ok(team));
    }
    void Cancel() => MudDialog.Close(DialogResult.Cancel());
}